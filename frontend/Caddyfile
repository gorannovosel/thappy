{
    # Global options
    admin off
    auto_https off
}

:80 {
    # Enable compression
    encode gzip

    # Security headers
    header {
        X-Frame-Options "SAMEORIGIN"
        X-Content-Type-Options "nosniff"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        # Remove Server header for security
        -Server
    }

    # Health check endpoint
    handle /health {
        header Content-Type application/json
        respond `{"status":"healthy","service":"thappy-frontend"}` 200
    }

    # Handle preflight CORS requests for API (must come first)
    handle /api/* {
        @options method OPTIONS
        handle @options {
            header {
                Access-Control-Allow-Origin "*"
                Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH"
                Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
                Access-Control-Max-Age "86400"
            }
            respond "" 204
        }
    }

    # API proxy with CORS headers
    handle /api/* {
        header {
            Access-Control-Allow-Origin "*"
            Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH"
            Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
        }
        reverse_proxy backend:8081
    }

    # Security: Block access to hidden files (but not root)
    handle /\..* {
        respond "Access denied" 403
    }

    # Serve static files
    handle {
        root * /usr/share/caddy

        # Cache static assets
        @static path *.js *.css *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
        handle @static {
            header Cache-Control "public, max-age=31536000, immutable"
        }

        # Client-side routing fallback
        try_files {path} {path}/ /index.html
        file_server
    }
}